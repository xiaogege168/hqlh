<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.limao.SkUserMapper">
  <resultMap id="BaseResultMap" type="com.limao.hqlh.entity.SkUser">
    <!--@mbg.generated-->
    <!--@Table hqlh.sk_user-->
    <id column="userId" jdbcType="INTEGER" property="userId" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="userPassword" jdbcType="VARCHAR" property="userPassword" />
    <result column="sfzName" jdbcType="VARCHAR" property="sfzName" />
    <result column="shopId" jdbcType="VARCHAR" property="shopId" />
    <result column="phoneNum" jdbcType="VARCHAR" property="phoneNum" />
    <result column="job" jdbcType="VARCHAR" property="job" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    userId, userName, userPassword, sfzName, shopId, phoneNum, job
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from hqlh.sk_user
    where userId = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from hqlh.sk_user
    where userId = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.limao.hqlh.entity.SkUser">
    <!--@mbg.generated-->
    insert into hqlh.sk_user (userId, userName, userPassword, 
      sfzName, shopId, phoneNum, 
      job)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{sfzName,jdbcType=VARCHAR}, #{shopId,jdbcType=VARCHAR}, #{phoneNum,jdbcType=VARCHAR}, 
      #{job,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.limao.hqlh.entity.SkUser">
    <!--@mbg.generated-->
    insert into hqlh.sk_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        userId,
      </if>
      <if test="userName != null">
        userName,
      </if>
      <if test="userPassword != null">
        userPassword,
      </if>
      <if test="sfzName != null">
        sfzName,
      </if>
      <if test="shopId != null">
        shopId,
      </if>
      <if test="phoneNum != null">
        phoneNum,
      </if>
      <if test="job != null">
        job,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="sfzName != null">
        #{sfzName,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.limao.hqlh.entity.SkUser">
    <!--@mbg.generated-->
    update hqlh.sk_user
    <set>
      <if test="userName != null">
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        userPassword = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="sfzName != null">
        sfzName = #{sfzName,jdbcType=VARCHAR},
      </if>
      <if test="shopId != null">
        shopId = #{shopId,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        phoneNum = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.limao.hqlh.entity.SkUser">
    <!--@mbg.generated-->
    update hqlh.sk_user
    set userName = #{userName,jdbcType=VARCHAR},
      userPassword = #{userPassword,jdbcType=VARCHAR},
      sfzName = #{sfzName,jdbcType=VARCHAR},
      shopId = #{shopId,jdbcType=VARCHAR},
      phoneNum = #{phoneNum,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR}
    where userId = #{userId,jdbcType=INTEGER}
  </update>
</mapper>